{
    "openapi": "3.1.0",
    "info": {
        "version": "1.0.1",
        "title": "Power Pulse API Documentation",
        "description": "REST API documentation for project 'Power Pulse'",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "consumes": ["application/json", "multipart/form-data"],
    "produces": ["application/json"],
    "servers": [
        { "url": "https://power-4vwy.onrender.com/api/v1" },
        { "url": "http://localhost:3000/api/v1" }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "Categories",
            "description": "Categories endpoints"
        },
        {
            "name": "Products",
            "description": "Products endpoints"
        },
        {
            "name": "Filters",
            "description": "Filters endpoints"
        },
        {
            "name": "Exercises",
            "description": "Exercises endpoints"
        }
    ],
    "paths": {
        "/users/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "User registration",

                "parameters": [],
                "security": [{ "Bearer": [] }],

                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    },
                    "409": {
                        "description": "Provided email already exists",
                        "content": {}
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "User login",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    },
                    "409": {
                        "description": "Provided email already exists",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Alex"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    }
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "message": {
                            "type": "string",
                            "description": "Message status",
                            "example": "User was created successfully"
                        },
                        "name": {
                            "type": "string",
                            "description": "User's name",
                            "example": "Alex"
                        },
                        "email": {
                            "type": "string",
                            "description": "User's email",
                            "format": "email"
                        }
                    }
                },
                "example": {
                    "user": {
                        "message": "User was created successfully",
                        "name": "Alex",
                        "email": "alex@mail.com"
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
