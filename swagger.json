{
    "openapi": "3.1.0",
    "info": {
        "version": "1.0.2",
        "title": "Power Pulse API Documentation",
        "description": "REST API documentation for project 'Power Pulse'",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "consumes": ["application/json", "multipart/form-data"],
    "produces": ["application/json"],
    "servers": [
        { "url": "https://power-4vwy.onrender.com/api/v1" },
        { "url": "http://localhost:3000/api/v1" }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "Categories",
            "description": "Categories endpoints"
        },
        {
            "name": "Products",
            "description": "Products endpoints"
        },
        {
            "name": "Filters",
            "description": "Filters endpoints"
        },
        {
            "name": "Exercises",
            "description": "Exercises endpoints"
        },
        {
            "name": "Diary",
            "description": "Diary endpoints"
        }
    ],
    "paths": {
        "/users/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "User registration",
                "parameters": [],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadReqBodyAuthResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Provided email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UsedEmailResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "User login",
                "parameters": [],
                "requestBody": {
                    "description": "Login's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadReqBodyAuthResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (wrong email or password)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedLoginResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/current": {
            "get": {
                "tags": ["Auth"],
                "summary": "Get user after refresh/reload page",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "User logout",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "patch": {
                "tags": ["Auth"],
                "summary": "User update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string",
                        "description": "User's ID"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "User update object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid ID)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidIdResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found user by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundByIdResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/upload": {
            "put": {
                "tags": ["Auth"],
                "summary": "User update avatar",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "Update avatar object (form-data:file)",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAvatarRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAvatarResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadReqBodyUpdateAvatarResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": ["Categories"],
                "summary": "Get all categories of product",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoriesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": ["Products"],
                "summary": "Get all products",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "type": "integer",
                        "description": "Page number"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "integer",
                        "description": "Products per page"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "type": "string",
                        "description": "Keyword search query"
                    },
                    {
                        "in": "query",
                        "name": "cat",
                        "type": "string",
                        "description": "Product's categories"
                    },
                    {
                        "in": "query",
                        "name": "rec",
                        "type": "boolean",
                        "description": "Depending on the blood type is recommended or not"
                    },
                    {
                        "in": "query",
                        "name": "bloodType",
                        "required": true,
                        "type": "integer",
                        "description": "Blood type (1|2|3|4)"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{productId}": {
            "get": {
                "tags": ["Products"],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "required": true,
                        "type": "string",
                        "description": "Product's ID"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductsByIdResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid ID)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidIdResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found product by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundByIdResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/filters": {
            "get": {
                "tags": ["Filters"],
                "summary": "Get filters",
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "required": true,
                        "type": "string",
                        "description": "Exercises's filter (one of 'Body parts'|'Muscles'|'Equipment')"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiltersResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid params query)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadParamsFiltersResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exercises": {
            "get": {
                "tags": ["Exercises"],
                "summary": "Get exercises by filters",
                "parameters": [
                    {
                        "in": "query",
                        "name": "bodyPart",
                        "required": true,
                        "type": "string",
                        "description": "Filter's 'Body part'"
                    },
                    {
                        "in": "query",
                        "name": "equipment",
                        "required": true,
                        "type": "string",
                        "description": "Filter's 'Equipment'"
                    },
                    {
                        "in": "query",
                        "name": "target",
                        "required": true,
                        "type": "string",
                        "description": "Filter's 'Target'"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExercisesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid params query)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadParamsExFiltersResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exercises/{exerciseId}": {
            "get": {
                "tags": ["Exercises"],
                "summary": "Get exercise by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "exerciseId",
                        "required": true,
                        "type": "string",
                        "description": "Exercise's ID"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExercisesByIdResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid ID)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidIdResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found exercise by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundByIdResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/diary-records/{date}": {
            "get": {
                "tags": ["Diary"],
                "summary": "Get diary by date (DATE format dd-mm-YYYY)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "date",
                        "required": true,
                        "type": "string",
                        "description": "Date's diary page"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiaryByDateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid DATE)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadReqDiaryByDateResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found diary page by date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundDiaryByDateResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/diary-records/add-product/{productId}": {
            "post": {
                "tags": ["Diary"],
                "summary": "Add product to diary",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "required": true,
                        "type": "string",
                        "description": "Product's ID"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "Diary's update product object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid ID)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidIdResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found user by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundByIdResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/diary-records/add-exercise/{exerciseId}": {
            "post": {
                "tags": ["Diary"],
                "summary": "Add exercise to diary",
                "parameters": [
                    {
                        "in": "path",
                        "name": "exerciseId",
                        "required": true,
                        "type": "string",
                        "description": "Exercise's ID"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "Diary's update exercise object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddExerciseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAvatarResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid Bearer token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadReqBodyUpdateAvatarResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Alex"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    }
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string",
                                "description": "Message status",
                                "example": "User was created successfully"
                            },
                            "name": {
                                "type": "string",
                                "description": "User's name",
                                "example": "Alex"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            }
                        }
                    }
                },
                "example": {
                    "user": {
                        "message": "User was created successfully",
                        "name": "Alex",
                        "email": "alex@mail.com"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "avatarURL": {
                                "type": "string",
                                "description": "URL user's avatar",
                                "example": "https://res.cloudinary.com/doiiko7sq/image/upload/v1705323621/default-avatar/default_dmhmqw.jpg"
                            },
                            "_id": {
                                "type": "string",
                                "description": "User's ID",
                                "example": "65a52e61cfe9180b44441f21"
                            },
                            "name": {
                                "type": "string",
                                "description": "User's name",
                                "example": "Alex"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email",
                                "example": "test@mail.com"
                            },
                            "token": {
                                "type": "string",
                                "description": "Bearer token",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTUyZTYxY2ZlOTE4MGI0NDQ0MWYyMSIsImlhdCI6MTcwNTMyNDE2MCwiZXhwIjoxNzA1NDA2OTYwfQ.zPR5gHUKnco4bOqswmvlozLdATEomLDYNnZw3h9Dcr8"
                            },
                            "height": {
                                "type": "integer",
                                "description": "User's height",
                                "example": 180
                            },
                            "currentWeight": {
                                "type": "integer",
                                "description": "User's current weight",
                                "example": 85
                            },
                            "desiredWeight": {
                                "type": "integer",
                                "description": "User's current weight",
                                "example": 75
                            },
                            "birthday": {
                                "type": "string",
                                "description": "User's birthday",
                                "example": "2000-01-01T01:00:00.000Z",
                                "format": "date"
                            },
                            "blood": {
                                "type": "integer",
                                "description": "User's blood type (1|2|3|4)",
                                "example": 2
                            },
                            "sex": {
                                "type": "string",
                                "description": "User's sex",
                                "example": "male"
                            },
                            "levelActivity": {
                                "type": "integer",
                                "description": "User's level activity (1|2|3|4|5)",
                                "example": 2
                            },
                            "dailySportTime": {
                                "type": "integer",
                                "description": "User's daily sport time (min)",
                                "example": 110
                            },
                            "dailyCalories": {
                                "type": "integer",
                                "description": "User's daily calories",
                                "example": 2200
                            }
                        }
                    }
                },
                "example": {
                    "user": {
                        "avatarURL": "https://res.cloudinary.com/doiiko7sq/image/upload/v1705323621/default-avatar/default_dmhmqw.jpg",
                        "_id": "65a52e61cfe9180b44441f21",
                        "name": "Alex",
                        "email": "test@mail.com",
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTUyZTYxY2ZlOTE4MGI0NDQ0MWYyMSIsImlhdCI6MTcwNTMyNDE2MCwiZXhwIjoxNzA1NDA2OTYwfQ.zPR5gHUKnco4bOqswmvlozLdATEomLDYNnZw3h9Dcr8",
                        "height": 180,
                        "currentWeight": 85,
                        "desiredWeight": 75,
                        "birthday": "2000-01-01T01:00:00.000Z",
                        "blood": 2,
                        "sex": "male",
                        "levelActivity": 2,
                        "dailySportTime": 110,
                        "dailyCalories": 2200
                    }
                }
            },
            "CurrentResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "avatarURL": {
                                "type": "string",
                                "description": "URL user's avatar",
                                "example": "https://res.cloudinary.com/doiiko7sq/image/upload/v1705323621/default-avatar/default_dmhmqw.jpg"
                            },
                            "_id": {
                                "type": "string",
                                "description": "User's ID",
                                "example": "65a52e61cfe9180b44441f21"
                            },
                            "name": {
                                "type": "string",
                                "description": "User's name",
                                "example": "Alex"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email",
                                "example": "test@mail.com"
                            },
                            "token": {
                                "type": "string",
                                "description": "Bearer token",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTUyZTYxY2ZlOTE4MGI0NDQ0MWYyMSIsImlhdCI6MTcwNTMyNDE2MCwiZXhwIjoxNzA1NDA2OTYwfQ.zPR5gHUKnco4bOqswmvlozLdATEomLDYNnZw3h9Dcr8"
                            },
                            "height": {
                                "type": "integer",
                                "description": "User's height",
                                "example": 180
                            },
                            "currentWeight": {
                                "type": "integer",
                                "description": "User's current weight",
                                "example": 85
                            },
                            "desiredWeight": {
                                "type": "integer",
                                "description": "User's current weight",
                                "example": 75
                            },
                            "birthday": {
                                "type": "string",
                                "description": "User's birthday",
                                "example": "2000-01-01T01:00:00.000Z",
                                "format": "date"
                            },
                            "blood": {
                                "type": "integer",
                                "description": "User's blood type (1|2|3|4)",
                                "example": 2
                            },
                            "sex": {
                                "type": "string",
                                "description": "User's sex",
                                "example": "male"
                            },
                            "levelActivity": {
                                "type": "integer",
                                "description": "User's level activity (1|2|3|4|5)",
                                "example": 2
                            },
                            "dailySportTime": {
                                "type": "integer",
                                "description": "User's daily sport time (min)",
                                "example": 110
                            },
                            "dailyCalories": {
                                "type": "integer",
                                "description": "User's daily calories",
                                "example": 2200
                            }
                        }
                    }
                },
                "example": {
                    "user": {
                        "avatarURL": "https://res.cloudinary.com/doiiko7sq/image/upload/v1705323621/default-avatar/default_dmhmqw.jpg",
                        "_id": "65a52e61cfe9180b44441f21",
                        "name": "Alex",
                        "email": "test@mail.com",
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTUyZTYxY2ZlOTE4MGI0NDQ0MWYyMSIsImlhdCI6MTcwNTMyNDE2MCwiZXhwIjoxNzA1NDA2OTYwfQ.zPR5gHUKnco4bOqswmvlozLdATEomLDYNnZw3h9Dcr8",
                        "height": 180,
                        "currentWeight": 85,
                        "desiredWeight": 75,
                        "birthday": "2000-01-01T01:00:00.000Z",
                        "blood": 2,
                        "sex": "male",
                        "levelActivity": 2,
                        "dailySportTime": 110,
                        "dailyCalories": 2200
                    }
                }
            },
            "UserUpdateRequest": {
                "type": "object",
                "required": [
                    "height",
                    "currentWeight",
                    "desiredWeight",
                    "birthday",
                    "blood",
                    "sex",
                    "levelActivity"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Alex"
                    },
                    "height": {
                        "type": "integer",
                        "description": "User's height (>150)",
                        "example": 176
                    },
                    "currentWeight": {
                        "type": "integer",
                        "description": "User's current weight (>35)",
                        "example": 85
                    },
                    "desiredWeight": {
                        "type": "integer",
                        "description": "User's desired weight (>35)",
                        "example": 75
                    },
                    "birthday": {
                        "type": "string",
                        "description": "User's birthday (since 2006)",
                        "example": "01.01.2000",
                        "format": "date"
                    },
                    "blood": {
                        "type": "integer",
                        "description": "User's blood type (1|2|3|4)",
                        "example": 2
                    },
                    "sex": {
                        "type": "string",
                        "description": "User's sex ('male' or 'female')",
                        "example": "male"
                    },
                    "levelActivity": {
                        "type": "integer",
                        "description": "User's level activity (1|2|3|4|5)",
                        "example": 3
                    }
                }
            },
            "UserUpdateResponse": {
                "type": "object",
                "properties": {
                    "avatarURL": {
                        "type": "string",
                        "description": "URL user's avatar",
                        "example": "https://res.cloudinary.com/doiiko7sq/image/upload/v1705323621/default-avatar/default_dmhmqw.jpg"
                    },
                    "_id": {
                        "type": "string",
                        "description": "User's ID",
                        "example": "65a52e61cfe9180b44441f21"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Alex"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email",
                        "example": "test@mail.com"
                    },
                    "token": {
                        "type": "string",
                        "description": "Bearer token",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTUyZTYxY2ZlOTE4MGI0NDQ0MWYyMSIsImlhdCI6MTcwNTMyNDE2MCwiZXhwIjoxNzA1NDA2OTYwfQ.zPR5gHUKnco4bOqswmvlozLdATEomLDYNnZw3h9Dcr8"
                    },
                    "height": {
                        "type": "integer",
                        "description": "User's height",
                        "example": 180
                    },
                    "currentWeight": {
                        "type": "integer",
                        "description": "User's current weight",
                        "example": 85
                    },
                    "desiredWeight": {
                        "type": "integer",
                        "description": "User's current weight",
                        "example": 75
                    },
                    "birthday": {
                        "type": "string",
                        "description": "User's birthday",
                        "example": "2000-01-01T01:00:00.000Z",
                        "format": "date"
                    },
                    "blood": {
                        "type": "integer",
                        "description": "User's blood type (1|2|3|4)",
                        "example": 2
                    },
                    "sex": {
                        "type": "string",
                        "description": "User's sex",
                        "example": "male"
                    },
                    "levelActivity": {
                        "type": "integer",
                        "description": "User's level activity (1|2|3|4|5)",
                        "example": 2
                    },
                    "dailySportTime": {
                        "type": "integer",
                        "description": "User's daily sport time (min)",
                        "example": 110
                    },
                    "dailyCalories": {
                        "type": "integer",
                        "description": "User's daily calories",
                        "example": 2200
                    }
                },
                "example": {
                    "avatarURL": "https://res.cloudinary.com/doiiko7sq/image/upload/v1705323621/default-avatar/default_dmhmqw.jpg",
                    "_id": "65a52e61cfe9180b44441f21",
                    "name": "Alex",
                    "email": "test@mail.com",
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTUyZTYxY2ZlOTE4MGI0NDQ0MWYyMSIsImlhdCI6MTcwNTMyNDE2MCwiZXhwIjoxNzA1NDA2OTYwfQ.zPR5gHUKnco4bOqswmvlozLdATEomLDYNnZw3h9Dcr8",
                    "height": 180,
                    "currentWeight": 85,
                    "desiredWeight": 75,
                    "birthday": "2000-01-01T01:00:00.000Z",
                    "blood": 2,
                    "sex": "male",
                    "levelActivity": 2,
                    "dailySportTime": 110,
                    "dailyCalories": 2200
                }
            },
            "LogoutResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message logout success",
                        "example": "Logout success"
                    }
                }
            },
            "UpdateAvatarResponse": {
                "type": "object",
                "properties": {
                    "avatarURL": {
                        "type": "string",
                        "description": "URL new avatar",
                        "example": "https://res.cloudinary.com/doiiko7sq/image/upload/v1705510039/Avatars/dgzpd9mwxv5gzzz9bzll.jpg"
                    }
                }
            },
            "UpdateAvatarRequest": {
                "type": "object",
                "required": ["image"],
                "properties": {
                    "image": {
                        "type": "string",
                        "format": "binary",
                        "description": "Avatar's image (.jpg | .jpeg | .png)"
                    }
                }
            },
            "CategoriesResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "example": ["alcoholic drinks", "berries", "cereals"]
            },
            "ProductsResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "pages": {
                                "type": "integer",
                                "description": "Total pages",
                                "example": 1
                            },
                            "limit": {
                                "type": "integer",
                                "description": "Products per page",
                                "example": 50
                            },
                            "products": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "groupBloodNotAllowed": {
                                            "type": "object",
                                            "properties": {
                                                "1": {
                                                    "type": "boolean",
                                                    "description": "Recommended or not",
                                                    "example": true
                                                },
                                                "2": {
                                                    "type": "boolean",
                                                    "description": "Recommended or not",
                                                    "example": true
                                                },
                                                "3": {
                                                    "type": "boolean",
                                                    "description": "Recommended or not",
                                                    "example": false
                                                },
                                                "4": {
                                                    "type": "boolean",
                                                    "description": "Recommended or not",
                                                    "example": false
                                                }
                                            }
                                        },
                                        "_id": {
                                            "type": "string",
                                            "description": "Product's ID",
                                            "example": "5d51694902b2373622ff5773"
                                        },
                                        "weight": {
                                            "type": "integer",
                                            "description": "Weight of product in grams",
                                            "example": 100
                                        },
                                        "calories": {
                                            "type": "integer",
                                            "description": "Quantity calories in product",
                                            "example": 340
                                        },
                                        "category": {
                                            "type": "string",
                                            "description": "Product's category",
                                            "example": "dairy"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Product's name",
                                            "example": "Danbo cheese"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "example": {
                    "data": {
                        "pages": 7,
                        "limit": 50,
                        "products": [
                            {
                                "groupBloodNotAllowed": {
                                    "1": true,
                                    "2": true,
                                    "3": true,
                                    "4": true
                                },
                                "_id": "5d51694902b2373622ff58a8",
                                "weight": 100,
                                "calories": 289,
                                "category": "flour",
                                "title": "Bread Hercules grain"
                            },
                            {
                                "groupBloodNotAllowed": {
                                    "1": true,
                                    "2": true,
                                    "3": true,
                                    "4": true
                                },
                                "_id": "5d51694902b2373622ff5896",
                                "weight": 100,
                                "calories": 286,
                                "category": "flour",
                                "title": "Tortilla (Mexican Tortillas)"
                            }
                        ]
                    }
                }
            },
            "ProductsByIdResponse": {
                "type": "object",
                "properties": {
                    "groupBloodNotAllowed": {
                        "type": "object",
                        "properties": {
                            "1": {
                                "type": "boolean",
                                "description": "Recommended or not",
                                "example": true
                            },
                            "2": {
                                "type": "boolean",
                                "description": "Recommended or not",
                                "example": true
                            },
                            "3": {
                                "type": "boolean",
                                "description": "Recommended or not",
                                "example": false
                            },
                            "4": {
                                "type": "boolean",
                                "description": "Recommended or not",
                                "example": false
                            }
                        }
                    },
                    "_id": {
                        "type": "string",
                        "description": "Product's ID",
                        "example": "5d51694902b2373622ff5773"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Weight of product in grams",
                        "example": 100
                    },
                    "calories": {
                        "type": "integer",
                        "description": "Quantity calories in product",
                        "example": 340
                    },
                    "category": {
                        "type": "string",
                        "description": "Product's category",
                        "example": "dairy"
                    },
                    "title": {
                        "type": "string",
                        "description": "Product's name",
                        "example": "Danbo cheese"
                    }
                },
                "example": {
                    "groupBloodNotAllowed": {
                        "1": true,
                        "2": true,
                        "3": false,
                        "4": false
                    },
                    "_id": "5d51694902b2373622ff5773",
                    "weight": 100,
                    "calories": 340,
                    "category": "dairy",
                    "title": "Danbo cheese"
                }
            },
            "FiltersResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string",
                            "description": "Filters's ID",
                            "example": "650f35ece3f5522fc6396289"
                        },
                        "filter": {
                            "type": "string",
                            "description": "Filter",
                            "example": "Body parts"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name",
                            "example": "back"
                        },
                        "imgURL": {
                            "type": "string",
                            "description": "URL image",
                            "example": "https://ftp.goit.study/img/power-pulse/filters/back_wzzphw.jpg"
                        }
                    }
                },
                "example": [
                    {
                        "_id": "650f35ece3f5522fc6396289",
                        "filter": "Body parts",
                        "name": "back",
                        "imgURL": "https://ftp.goit.study/img/power-pulse/filters/back_wzzphw.jpg"
                    },
                    {
                        "_id": "650f35ece3f5522fc639628a",
                        "filter": "Body parts",
                        "name": "cardio",
                        "imgURL": "https://ftp.goit.study/img/power-pulse/filters/cardio_pkkceg.jpg"
                    }
                ]
            },
            "ExercisesResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string",
                            "description": "Exercise's ID",
                            "example": "64f2458d6f67bc34bae4f813"
                        },
                        "bodyPart": {
                            "type": "string",
                            "description": "Body part",
                            "example": "upper arms"
                        },
                        "equipment": {
                            "type": "string",
                            "description": "Equipment",
                            "example": "barbell"
                        },
                        "gifUrl": {
                            "type": "string",
                            "description": "URL GIF exercise",
                            "example": "https://ftp.goit.study/img/power-pulse/gifs/0038.gif"
                        },
                        "name": {
                            "type": "string",
                            "description": "Exercise's name",
                            "example": "barbell drag curl"
                        },
                        "target": {
                            "type": "string",
                            "description": "Muscles's target ",
                            "example": "biceps"
                        },
                        "burnedCalories": {
                            "type": "integer",
                            "description": "Burned calories",
                            "example": 84
                        },
                        "time": {
                            "type": "integer",
                            "description": "Time",
                            "example": 3
                        }
                    }
                },
                "example": [
                    {
                        "_id": "64f2458d6f67bc34bae4f7f7",
                        "bodyPart": "chest",
                        "equipment": "leverage machine",
                        "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0009.gif",
                        "name": "assisted chest dip (kneeling)",
                        "target": "pectorals",
                        "burnedCalories": 329,
                        "time": 3
                    },
                    {
                        "_id": "64f2458d6f67bc34bae4f801",
                        "bodyPart": "upper arms",
                        "equipment": "leverage machine",
                        "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0019.gif",
                        "name": "assisted triceps dip (kneeling)",
                        "target": "triceps",
                        "burnedCalories": 233,
                        "time": 3
                    }
                ]
            },
            "ExercisesByIdResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "Exercise's ID",
                        "example": "64f2458d6f67bc34bae4f813"
                    },
                    "bodyPart": {
                        "type": "string",
                        "description": "Body part",
                        "example": "upper arms"
                    },
                    "equipment": {
                        "type": "string",
                        "description": "Equipment",
                        "example": "barbell"
                    },
                    "gifUrl": {
                        "type": "string",
                        "description": "URL GIF exercise",
                        "example": "https://ftp.goit.study/img/power-pulse/gifs/0038.gif"
                    },
                    "name": {
                        "type": "string",
                        "description": "Exercise's name",
                        "example": "barbell drag curl"
                    },
                    "target": {
                        "type": "string",
                        "description": "Muscles's target ",
                        "example": "biceps"
                    },
                    "burnedCalories": {
                        "type": "integer",
                        "description": "Burned calories",
                        "example": 84
                    },
                    "time": {
                        "type": "integer",
                        "description": "Time",
                        "example": 3
                    }
                },
                "example": {
                    "_id": "64f2458d6f67bc34bae4f813",
                    "bodyPart": "upper arms",
                    "equipment": "barbell",
                    "gifUrl": "https://ftp.goit.study/img/power-pulse/gifs/0038.gif",
                    "name": "barbell drag curl",
                    "target": "biceps",
                    "burnedCalories": 84,
                    "time": 3
                }
            },
            "UnauthorizedResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message invalid Bearer token",
                        "example": "Not authorized"
                    }
                }
            },
            "InvalidIdResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message invalid ID",
                        "example": "5d51694902b2373622ff577 is not valid ID!"
                    }
                }
            },
            "NotFoundByIdResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message not found by ID",
                        "example": "User/Product/Exercise by ID: \"5d51694902b2373622ff7771\" not found"
                    }
                }
            },
            "BadParamsFiltersResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message bad params filter",
                        "example": "Please change filter: \"Equipment\" or \"Muscles\""
                    }
                }
            },
            "BadParamsExFiltersResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message bad params filter",
                        "example": "Please change filter"
                    }
                }
            },
            "BadReqBodyAuthResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message bad request body",
                        "example": "\"password\" length must be at least 6 characters long"
                    }
                }
            },
            "UnauthorizedLoginResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message bad request body",
                        "example": "Email or password is wrong"
                    }
                }
            },
            "UsedEmailResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message used email",
                        "example": "Email in use"
                    }
                }
            },
            "BadReqBodyUpdateAvatarResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Message bad request body",
                        "example": "Unsupported Media Type"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message bad request body",
                        "example": "An unknown file format not allowed"
                    }
                }
            },
            "DiaryByDateResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "Diary page's ID",
                        "example": "65a82c2d579ae912a1ac78cb"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date (format dd-mm-yyyy)",
                        "example": "17-01-2024"
                    },
                    "user": {
                        "type": "string",
                        "description": "Owner user's ID",
                        "example": "65a5c3bc6b69c2f872091ad0"
                    },
                    "exercises": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "exercise": {
                                    "type": "string",
                                    "description": "Exercise's ID",
                                    "example": "65a82c2d579ae912a1ac78cc"
                                },
                                "time": {
                                    "type": "integer",
                                    "description": "Exercise's spent time",
                                    "example": 5
                                },
                                "calories": {
                                    "type": "integer",
                                    "description": "Burned calories",
                                    "example": 100
                                },
                                "_id": {
                                    "type": "string",
                                    "description": "Added exercise's ID",
                                    "example": "65a82c2d579ae912a1ac78cc"
                                }
                            }
                        }
                    },
                    "caloriesConsumed": {
                        "type": "integer",
                        "description": "Total consumed calories at day",
                        "example": 3000
                    },
                    "caloriesBurned": {
                        "type": "integer",
                        "description": "Total burned calories at day",
                        "example": 200
                    },
                    "activity": {
                        "type": "integer",
                        "description": "Total activity time at day",
                        "example": 10
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "product": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string",
                                            "description": "Product's ID",
                                            "example": "5d51694902b2373622ff5773"
                                        },
                                        "category": {
                                            "type": "string",
                                            "description": "Product's category",
                                            "example": "dairy"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Product's title",
                                            "example": "Danbo cheese"
                                        }
                                    }
                                },
                                "amount": {
                                    "type": "integer",
                                    "description": "Product's amount (g)",
                                    "example": 200
                                },
                                "calories": {
                                    "type": "integer",
                                    "description": "Consumed calories",
                                    "example": 680
                                },
                                "_id": {
                                    "type": "string",
                                    "description": "Added product's ID",
                                    "example": "65a83fa65629d0b2e2452001"
                                }
                            }
                        }
                    }
                },
                "example": {
                    "_id": "65a82c2d579ae912a1ac78cb",
                    "date": "17-01-2024",
                    "user": "65a5c3bc6b69c2f872091ad0",
                    "exercises": [
                        {
                            "exercise": "64f2458d6f67bc34bae4f7f7",
                            "time": 5,
                            "calories": 200,
                            "_id": "65a82c2d579ae912a1ac78cc"
                        },
                        {
                            "exercise": "64f2458d6f67bc34bae4f801",
                            "time": 5,
                            "calories": 200,
                            "_id": "65a82cab3a18b00ccbf476bd"
                        }
                    ],
                    "caloriesConsumed": 1360,
                    "caloriesBurned": 400,
                    "activity": 10,
                    "products": [
                        {
                            "product": {
                                "_id": "5d51694902b2373622ff5773",
                                "category": "dairy",
                                "title": "Danbo cheese"
                            },
                            "amount": 200,
                            "calories": 680,
                            "_id": "65a83fa65629d0b2e2452001"
                        },
                        {
                            "product": {
                                "_id": "5d51694902b2373622ff5777",
                                "category": "dairy",
                                "title": "Homemade Cheese"
                            },
                            "amount": 200,
                            "calories": 680,
                            "_id": "65a83fb05629d0b2e245200c"
                        }
                    ]
                }
            },
            "BadReqDiaryByDateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message bad request date format",
                        "example": "Enter valid date in the format dd-mm-YYYY"
                    }
                }
            },
            "NotFoundDiaryByDateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message not found by DATE",
                        "example": "No records for this date"
                    }
                }
            },
            "AddProductRequest": {
                "type": "object",
                "required": ["date", "calories", "amount"],
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Date (format dd-mm-yyyy)",
                        "example": "17-01-2024"
                    },
                    "calories": {
                        "type": "integer",
                        "description": "Consumed calories",
                        "example": 680
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Product's amount (g)",
                        "example": 200
                    }
                },
                "example": {
                    "date": "17-01-2024",
                    "calories": 680,
                    "amount": 200
                }
            },
            "AddExerciseRequest": {
                "type": "object",
                "required": ["date", "calories", "time"],
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Date (format dd-mm-yyyy)",
                        "example": "17-01-2024"
                    },
                    "calories": {
                        "type": "integer",
                        "description": "Burned calories",
                        "example": 100
                    },
                    "time": {
                        "type": "integer",
                        "description": "Exercise's spent time",
                        "example": 5
                    }
                },
                "example": {
                    "date": "17-01-2024",
                    "calories": 100,
                    "time": 5
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
